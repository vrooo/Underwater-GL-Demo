#version 430 core

layout (local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;

uniform mat4 M;

struct InVertexData
{
	vec3 position;
	float texCoordU;
	vec3 normal;
	float texCoordV;
};

layout (std430, binding = 0) buffer InBuffer
{
	InVertexData vertices[];
};

layout (std430, binding = 1) buffer OutBuffer
{
	vec4 positions[];
};

void main()
{
	uint id = gl_GlobalInvocationID.x;
	if (id < vertices.length())
		positions[id] = M * vec4(vertices[id].position, 1.0f);
}